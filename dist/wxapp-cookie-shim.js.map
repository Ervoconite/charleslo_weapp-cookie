{"version":3,"file":"wxapp-cookie-shim.js","sources":["../src/Cookie.js","../src/CookieStore.js","../src/cookieShim.js"],"sourcesContent":["/**\n * Cookie 类\n */\nclass Cookie {\n  /**\n   * 构造函数\n   */\n  constructor (obj) {\n    this.key = obj.key || ''\n    this.value = obj.value || ''\n    // other\n    this.domain = obj.domain || ''\n    this.path = obj.path || ''\n    this.expires = obj.expires ? new Date(obj.expires) : null\n    this.maxAge = obj.maxAge ? parseInt(obj.maxAge) : null\n    this.httpOnly = !!obj.httpOnly\n    // 记录时间\n    this.dateTime = obj.dateTime ? new Date(obj.dateTime) : new Date()\n  }\n\n  /**\n   * 设置 cookie, 将 set-cookie 字符串转换为 Cookie 对象\n   */\n  set (setCookieStr = '') {\n    // 解析并设置 cookie 属性值\n    let arr = setCookieStr.split(/\\s*\\\\;\\s*/g)\n    arr.forEach((item, i) => {\n      let temp = item.split('=')\n      if (i === 0) {\n        this.key = temp[0]\n        this.value = temp[1]\n      } else {\n        let prop = temp[0]\n        let value = temp[1]\n        prop = prop.replace(/-/g, '').replace(/^(\\S)/g, (prop[0] || '').toLowerCase())\n\n        switch (prop) {\n          case 'maxAge':\n            this.maxAge = parseInt(value)\n            break\n          case 'expires':\n            this.expires = new Date(value)\n            break\n          case 'httpOnly':\n            this.httpOnly = true\n            break\n          default:\n            this[prop] = value\n            break\n        }\n      }\n    })\n\n    // 更新设置时间\n    this.dateTime = new Date()\n\n    return this\n  }\n\n  /**\n   * 验证 cookie 是否还有效\n   * @return {Boolean} 是否有效\n   */\n  validate () {\n    // maxAge 为 0，无效\n    if (this.maxAge === 0) {\n      return false\n    }\n    // 存活秒数超出 maxAge，无效\n    if (this.maxAge > 0) {\n      let seconds = (Date.now() - this.dateTime.getTime()) / 1000\n      return seconds < this.maxAge\n    }\n    // expires 小于当前时间，无效\n    if (this.expires && this.expires < new Date()) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * 验证 cookie 是否可持久化\n   * @return {Boolean} 是否可持久化\n   */\n  isPersistence () {\n    return this.maxAge ? this.maxAge > 0 : true\n  }\n\n  /**\n   * 重写对象的 toString 方法\n   */\n  toString () {\n    return [this.key, this.value].join('=')\n  }\n}\n\nexport default Cookie\n","import Cookie from './Cookie'\n\n/**\n * CookieStore 类\n */\nclass CookieStore {\n  /**\n   * 构造函数\n   */\n  constructor () {\n    this.storageKey = 'cookie_store'\n    this.cookies = this.readFromStorage()\n  }\n\n  /**\n   * 获取 cookies\n   */\n  getCookies (domain) {\n    // 获取符合条件的 cookie\n    let filterCookies = this.cookies.filter((item) => {\n      if (item.domain !== domain) return false\n      return item.validate()\n    })\n\n    // 转化为 request cookies 字符串\n    return this.stringify(filterCookies)\n  }\n\n  /**\n   * 设置 cookies\n   */\n  setCookies (domain, cookieStr) {\n    // 转换为 cookie 对象数组\n    let parsedCookies = this.parse(domain, cookieStr)\n\n    // 删除旧的同名 cookie\n    let keys = parsedCookies.map((item) => item.key)\n    this.removeCookies(domain, keys)\n\n    // 设置新 cookie\n    this.cookies = this.cookies.concat(parsedCookies)\n\n    // 保存到本地存储\n    this.saveToStorage()\n  }\n\n  /**\n   * 删除 cookies\n   * @param  {String} domain 域名\n   * @param  {Array} keys   cookie 键列表\n   */\n  removeCookies (domain, keys) {\n    // 删除 cookies\n    this.cookies = this.cookies.filter((item) => {\n      return !(item.domain === domain && keys.indexOf(item.key) >= 0)\n    })\n  }\n\n  /**\n   * 将 cookies 保存到 Storage\n   */\n  saveToStorage () {\n    // 清除无效 cookie\n    this.cookies = this.cookies.filter((item) => {\n      return item.validate()\n    })\n\n    // 只存储可持久化 cookie\n    let saveCookies = this.cookies.filter((item) => {\n      return item.isPersistence()\n    })\n\n    // 保存到本地存储\n    wx.setStorageSync(this.storageKey, saveCookies)\n  }\n\n  /**\n   * 从 Storage 读取 cookies\n   */\n  readFromStorage () {\n    let cookies = wx.getStorageSync(this.storageKey) || []\n    this.cookies = cookies.map((item) => new Cookie(item))\n    return this.cookies\n  }\n\n  /**\n   * 清除 cookies\n   */\n  clearCookies (domain) {\n    this.cookies = domain ? this.cookies.filter((item) => item.domain !== domain) : []\n    this.saveToStorage()\n  }\n\n  /**\n   * 解析 response set-cookie 字段\n   */\n  parse (domain, setCookieStr = '') {\n    // 切分 cookies\n    let cookies = setCookieStr.split(',')\n    let fixCookies = []\n\n    // 修复被切分的 cookies\n    cookies.forEach((item) => {\n      if (item.match(/^\\S+\\\\=/ig)) {\n        fixCookies.push(item)\n      } else {\n        let lastIndex = fixCookies.length - 1\n        fixCookies[lastIndex] = [fixCookies[lastIndex], item].join(',')\n      }\n    })\n\n    // parse\n    return fixCookies.map((item) => new Cookie({ domain: domain }).set(item))\n  }\n\n  /**\n   * 将 cookies 字符串化，转化为 request cookies 字符串\n   * @param  {Array} cookies cookie对象数组\n   * @return {String}        cookie字符串\n   */\n  stringify (cookies) {\n    return cookies.map((item) => item.toString()).join('; ')\n  }\n}\n\nexport default CookieStore\n","import CookieStore from './CookieStore'\n\n/**\n * 微信 Cookie 代理\n * @param  {Object} wx      微信 API 对象\n * @param  {Object} request 微信请求函数\n */\nconst cookieStore = (function (wx, request) {\n  // 创建 cookieStore 实例\n  const cookieStore = new CookieStore()\n\n  /**\n   * 定义请求代理函数\n   * @param  {Object} options 请求参数\n   */\n  function requestProxy (options) {\n    // 是否启用 cookie（默认 true）\n    options.cookie = options.cookie === undefined || !!options.cookie\n    options.dataType = options.dataType || 'json'\n    if (options.cookie) {\n      // 域名\n      let domain = new URL(options.url).host\n\n      // 获取请求 cookies\n      let requestCookies = cookieStore.getCookies(domain)\n\n      // 请求时带上设置的 cookies\n      options.header = options.header || {}\n      options.header['Cookie'] = requestCookies\n      options.header['X-Requested-With'] = 'XMLHttpRequest'\n      if (options.dataType === 'json') {\n        options.header['Accept'] = 'application/json, text/plain, */*'\n      }\n\n      // 请求成功回调\n      let successCallback = options.success\n      options.success = function (response) {\n        // 获取响应 cookies\n        let responseCookies = response.header['set-cookie']\n        // 设置 cookies，以便下次请求带上\n        cookieStore.setCookies(domain, responseCookies)\n        successCallback && successCallback(response)\n      }\n    }\n\n    // 发送网络请求\n    request(options)\n  }\n\n  // 使用 requestProxy 覆盖微信原生 request\n  Object.defineProperties(wx, {\n    request: {\n      value: requestProxy\n    }\n  })\n\n  // 返回 cookieStore\n  return cookieStore\n})(wx, wx.request)\n\n// 导出 cookieStore 实例\nexport default cookieStore\n"],"names":["Cookie","obj","key","value","domain","path","expires","Date","maxAge","parseInt","httpOnly","dateTime","setCookieStr","arr","split","forEach","item","i","temp","prop","replace","toLowerCase","seconds","now","getTime","join","CookieStore","storageKey","cookies","readFromStorage","filterCookies","filter","validate","stringify","cookieStr","parsedCookies","parse","keys","map","removeCookies","concat","saveToStorage","indexOf","saveCookies","isPersistence","setStorageSync","wx","getStorageSync","fixCookies","match","push","lastIndex","length","set","toString","cookieStore","request","requestProxy","options","cookie","undefined","dataType","URL","url","host","requestCookies","getCookies","header","successCallback","success","response","responseCookies","setCookies"],"mappings":"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"}